// Code generated by re2c 3.1, DO NOT EDIT.
package main

import "bytes"

func re2Email2RuleBV(input []byte) int {
	var YYMAXFILL int = 9

	var count int
	var cur, mar int
	input = append(input, bytes.Repeat([]byte{0}, YYMAXFILL)...)
	lim := len(input)

	for {
		{
			var yych byte
			yybm := []byte{
				0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 72, 0, 56, 40, 64,
				120, 120, 120, 120, 120, 120, 120, 120,
				120, 120, 0, 0, 0, 128, 0, 0,
				0, 120, 120, 120, 120, 120, 120, 120,
				120, 120, 120, 120, 120, 120, 120, 120,
				120, 120, 120, 120, 120, 120, 120, 120,
				120, 120, 120, 0, 0, 0, 0, 56,
				0, 120, 120, 120, 120, 120, 120, 120,
				120, 120, 120, 120, 120, 120, 120, 120,
				120, 120, 120, 120, 120, 120, 120, 120,
				120, 120, 120, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0,
			}
			if lim-cur < 9 {
				panic(`fill unexpected`)
			}
			yych = input[cur]
			if yych <= ':' {
				if yych <= ',' {
					if yych <= 0x00 {
						goto yy1
					}
					if yych == '+' {
						goto yy4
					}
					goto yy2
				} else {
					if yych == '/' {
						goto yy2
					}
					if yych <= '9' {
						goto yy4
					}
					goto yy2
				}
			} else {
				if yych <= '^' {
					if yych <= ';' {
						goto yy5
					}
					if yych <= '@' {
						goto yy2
					}
					if yych <= 'Z' {
						goto yy4
					}
					goto yy2
				} else {
					if yych == '`' {
						goto yy2
					}
					if yych <= 'z' {
						goto yy4
					}
					goto yy2
				}
			}
		yy1:
			cur += 1
			{
				return count
			}
		yy2:
			cur += 1
		yy3:
			{
				continue
			}
		yy4:
			cur += 1
			mar = cur
			yych = input[cur]
			if yych <= '9' {
				if yych <= ',' {
					if yych == '+' {
						goto yy7
					}
					goto yy3
				} else {
					if yych == '/' {
						goto yy3
					}
					goto yy7
				}
			} else {
				if yych <= '^' {
					if yych <= '?' {
						goto yy3
					}
					if yych <= 'Z' {
						goto yy7
					}
					goto yy3
				} else {
					if yych == '`' {
						goto yy3
					}
					if yych <= 'z' {
						goto yy7
					}
					goto yy3
				}
			}
		yy5:
			cur += 1
			mar = cur
			yych = input[cur]
			if yych == 'b' {
				goto yy10
			}
			goto yy3
		yy6:
			cur += 1
			if lim-cur < 2 {
				panic(`fill unexpected`)
			}
			yych = input[cur]
		yy7:
			if yybm[0+yych]&8 != 0 {
				goto yy6
			}
			if yych == '@' {
				goto yy9
			}
		yy8:
			cur = mar
			goto yy3
		yy9:
			cur += 1
			yych = input[cur]
			if yych == '.' {
				goto yy11
			}
			goto yy12
		yy10:
			cur += 1
			yych = input[cur]
			if yych == 'a' {
				goto yy13
			}
			goto yy8
		yy11:
			cur += 1
			if lim-cur < 2 {
				panic(`fill unexpected`)
			}
			yych = input[cur]
		yy12:
			if yybm[0+yych]&16 != 0 {
				goto yy11
			}
			if yych <= ',' {
				goto yy8
			}
			if yych <= '.' {
				goto yy14
			}
			goto yy8
		yy13:
			cur += 1
			yych = input[cur]
			if yych == 's' {
				goto yy15
			}
			goto yy8
		yy14:
			cur += 1
			yych = input[cur]
			if yybm[0+yych]&32 != 0 {
				goto yy16
			}
			goto yy8
		yy15:
			cur += 1
			yych = input[cur]
			if yych == 'e' {
				goto yy17
			}
			goto yy8
		yy16:
			cur += 1
			if lim-cur < 1 {
				panic(`fill unexpected`)
			}
			yych = input[cur]
			if yybm[0+yych]&32 != 0 {
				goto yy16
			}
			{
				count += 1
				continue
			}
		yy17:
			cur += 1
			yych = input[cur]
			if yych != '6' {
				goto yy8
			}
			cur += 1
			yych = input[cur]
			if yych != '4' {
				goto yy8
			}
			cur += 1
			yych = input[cur]
			if yych != ',' {
				goto yy8
			}
			cur += 1
			yych = input[cur]
			if yybm[0+yych]&64 != 0 {
				goto yy18
			}
			goto yy8
		yy18:
			cur += 1
			if lim-cur < 1 {
				panic(`fill unexpected`)
			}
			yych = input[cur]
			if yybm[0+yych]&64 != 0 {
				goto yy18
			}
			if yych == '=' {
				goto yy20
			}
		yy19:
			{
				continue
			}
		yy20:
			cur += 1
			if lim-cur < 1 {
				panic(`fill unexpected`)
			}
			yych = input[cur]
			if yybm[0+yych]&128 != 0 {
				goto yy20
			}
			goto yy19
		}

	}
}
