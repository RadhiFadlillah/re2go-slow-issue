// Code generated by re2c 3.1, DO NOT EDIT.
package main

import "bytes"

func re2EmailSentinelBV(input []byte) int {
	var YYMAXFILL int = 3

	var count int
	var cur, mar int
	input = append(input, bytes.Repeat([]byte{0}, YYMAXFILL)...)
	lim := len(input)

	for {
		{
			var yych byte
			yybm := []byte{
				0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 32, 0, 224, 160, 0,
				224, 224, 224, 224, 224, 224, 224, 224,
				224, 224, 0, 0, 0, 0, 0, 0,
				0, 224, 224, 224, 224, 224, 224, 224,
				224, 224, 224, 224, 224, 224, 224, 224,
				224, 224, 224, 224, 224, 224, 224, 224,
				224, 224, 224, 0, 0, 0, 0, 224,
				0, 224, 224, 224, 224, 224, 224, 224,
				224, 224, 224, 224, 224, 224, 224, 224,
				224, 224, 224, 224, 224, 224, 224, 224,
				224, 224, 224, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0,
			}
			if lim-cur < 3 {
				panic(`fill unexpected`)
			}
			yych = input[cur]
			if yych <= '9' {
				if yych <= '+' {
					if yych <= 0x00 {
						goto yy1
					}
					if yych <= '*' {
						goto yy2
					}
					goto yy4
				} else {
					if yych <= ',' {
						goto yy2
					}
					if yych == '/' {
						goto yy2
					}
					goto yy4
				}
			} else {
				if yych <= '^' {
					if yych <= '@' {
						goto yy2
					}
					if yych <= 'Z' {
						goto yy4
					}
					goto yy2
				} else {
					if yych == '`' {
						goto yy2
					}
					if yych <= 'z' {
						goto yy4
					}
					goto yy2
				}
			}
		yy1:
			cur += 1
			{
				return count
			}
		yy2:
			cur += 1
		yy3:
			{
				continue
			}
		yy4:
			cur += 1
			mar = cur
			yych = input[cur]
			if yych <= '9' {
				if yych <= ',' {
					if yych == '+' {
						goto yy6
					}
					goto yy3
				} else {
					if yych == '/' {
						goto yy3
					}
					goto yy6
				}
			} else {
				if yych <= '^' {
					if yych <= '?' {
						goto yy3
					}
					if yych <= 'Z' {
						goto yy6
					}
					goto yy3
				} else {
					if yych == '`' {
						goto yy3
					}
					if yych <= 'z' {
						goto yy6
					}
					goto yy3
				}
			}
		yy5:
			cur += 1
			if lim-cur < 2 {
				panic(`fill unexpected`)
			}
			yych = input[cur]
		yy6:
			if yybm[0+yych]&32 != 0 {
				goto yy5
			}
			if yych == '@' {
				goto yy8
			}
		yy7:
			cur = mar
			goto yy3
		yy8:
			cur += 1
			yych = input[cur]
			if yych != '.' {
				goto yy10
			}
		yy9:
			cur += 1
			if lim-cur < 2 {
				panic(`fill unexpected`)
			}
			yych = input[cur]
		yy10:
			if yybm[0+yych]&64 != 0 {
				goto yy9
			}
			if yych <= ',' {
				goto yy7
			}
			if yych >= '/' {
				goto yy7
			}
			cur += 1
			yych = input[cur]
			if yybm[0+yych]&128 != 0 {
				goto yy11
			}
			goto yy7
		yy11:
			cur += 1
			if lim-cur < 1 {
				panic(`fill unexpected`)
			}
			yych = input[cur]
			if yybm[0+yych]&128 != 0 {
				goto yy11
			}
			{
				count += 1
				continue
			}
		}

	}
}
